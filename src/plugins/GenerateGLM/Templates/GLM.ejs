<% for ( var attr in model.attributes) { 
     var val = model.attributes[attr];
     if (commands[attr] && val != null && val.length > 0) { -%>
#<%- commands[attr] %> <%- attr %>=<%- val %>;
<%   }
   } -%>

<% modules.map(function(moduleMap) {
     if (model[moduleMap[0] + 's']) { -%>
module <%- moduleMap[1] %>;
<%   }
   }); -%>

<% if (model.clocks) {
model.clocks.map(function(clock) { -%>
clock {
<% if (clock.timestamp) { -%>
  timestamp '<%- clock.timestamp %>';
<% }
   if (clock.stoptime) { -%>
  stoptime '<%- clock.stoptime %>';
<% }
  if (clock.timezone) { -%>
  timezone <%- clock.timezone %>;
<% } -%>
}

<% }); 
   } -%>
<% if (model.powerflows) {
model.powerflows.map(function(obj) { -%>
module <%- obj.type %> {
<%   for (var attr in obj.attributes) { 
       if ( attr == undefined ) continue;
       if ( attr == 'name' ) continue;
       var val = obj.attributes[attr];
       if ( val == undefined || val == null || val.length == 0 ) continue; -%>
  <%- attr %> <%- val %>;
<%   } -%>
}

<% }); 
   } -%>
<% if (model.residentials) {
model.residentials.map(function(obj) { -%>
module <%- obj.type %> {
<%   for (var attr in obj.attributes) { 
       if ( attr == 'name' ) continue;
       var val = obj.attributes[attr]; 
       if ( val == undefined || val == null || val.length == 0 ) continue; -%>
  <%- attr %> <%- val %>;
<%   } -%>
}

<% });
   } -%>
<% if (model.schedules) {
model.schedules.map(function(schedule) { -%>
schedule <%- schedule.name %> {
<%   if( schedule.schedule_entrys ) {
     schedule.schedule_entrys.map(function(entry) {
       if (entry.value) { -%>
    <%- entry.minutes %> <%- entry.hours %> <%- entry.days %> <%- entry.months %> <%- entry.weekdays %> <%- entry.value %>;
<%     } 
       else { -%>
    <%- entry.minutes %> <%- entry.hours %> <%- entry.days %> <%- entry.months %> <%- entry.weekdays %>;
<%     }
     }); -%>
}

<% }});
   } -%>
<% childTypes.map(function(childType) {
      var listName = childType + 's';
      if (model[listName] == undefined) return;
      model[listName].map(function(obj) { -%>
object <%- obj.type %><% if (/[a-zA-Z_]/.test(obj.name) == false) { %>:<%- obj.name.replace(/\-/g,'') %><% } %> {
<%  	if (/[a-zA-Z_]/.test(obj.name) == false) { obj.attributes.name = undefined; }
        var ptrs = {};
	if (pointerDict[obj.type]) {
          var keys = Object.keys(pointerDict[obj.type]);
          keys.map(function(key) { ptrs[pointerDict[obj.type][key]] = true; });
        }
        for (var attr in obj.attributes) {
	  var val = obj.attributes[attr];
          if (ptrs[attr]) continue;
          if (val == undefined || val == null || val.length == 0) continue; -%>
  <%- attr %> <%- val %>;
<%	} -%>
<%  	for (var ptr in obj.pointers) {
	  var dst = obj[ptr]; 
          if (!pointerDict[obj.type] || !pointerDict[obj.type][ptr]) continue;
          if (dst == undefined) continue; -%>
  <%- pointerDict[obj.type][ptr] %> <% if (/[a-zA-Z_]/.test(dst.name) == false) { %><%- dst.type %>:<%- dst.name %><% } else { %><%- dst.name %><% } %>;
<%	} -%>
 }

<%      });
  }); -%>
